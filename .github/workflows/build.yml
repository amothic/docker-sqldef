name: build

on:
  workflow_dispatch:
    inputs:
      version:
        description: Specify the sqldef version to build (e.g. v0.17.24)
        required: true

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tool: [ 'mysqldef', 'psqldef', 'sqlite3def', 'mssqldef' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Parse version
        env:
          INPUT_VERSION: ${{ inputs.version }}
        run: |
          echo "version=${INPUT_VERSION#v}" >> $GITHUB_ENV
          echo "major=$(echo ${INPUT_VERSION#v} | cut -d. -f1)" >> $GITHUB_ENV
          echo "minor=$(echo ${INPUT_VERSION#v} | cut -d. -f2)" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.tool }}
          tags: |
            type=raw,value=${{ env.version }}
            type=raw,value=${{ env.major }}.${{ env.minor }}
            type=raw,value=${{ env.major }}
            type=raw,value=latest
          labels: |
            version=${{ env.version }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          build-args: |
            SQLDEF_TOOL=${{ matrix.tool }}
            VERSION=${{ inputs.version }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
